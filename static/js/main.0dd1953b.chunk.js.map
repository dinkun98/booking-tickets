{"version":3,"sources":["BaiTapRedux/BaiTapBookingTicket/ThongTinDatGhe.js","redux/actions/BaiTapDatVeActions.js","redux/types/BaiTapDatVeType.js","BaiTapRedux/BaiTapBookingTicket/HangGhe.js","BaiTapRedux/BaiTapBookingTicket/BaiTapBookingTicket.js","App.js","serviceWorker.js","redux/reducer/BaiTapGioHangReducer.js","redux/reducer/BaiTapXucXacReducer.js","redux/reducer/BaiTapOanTuXiReducer.js","redux/reducer/BaiTapDatVeReducer.js","redux/reducer/rootReducer.js","index.js"],"names":["ThongTinDatGhe","className","style","fontSize","marginLeft","border","this","props","danhSachGheDangDat","map","gheDangDat","index","key","soGhe","gia","toLocaleString","onClick","dispatch","type","reduce","tongTien","Component","connect","state","BaiTapDatVeReducer","HangGhe","renderGhe","hangGhe","danhSachGhe","ghe","cssGheDaDat","disabled","daDat","cssGheDangDat","findIndex","datGhe","renderSoHang","hang","renderHangGhe","soHangGhe","datGheAction","BaiTapBookingTicket","danhSachGheData","position","width","height","backgroundImage","backgroundSize","backgroundColor","display","flexDirection","justifyContent","App","Boolean","window","location","hostname","match","stateGioHang","gioHang","BaiTapGioHangReducer","action","spGH","maSP","spGioHang","soLuong","push","gioHangCapNhat","splice","tangGiam","alert","stateDefault","taiXiu","mangXucXac","ma","hinhAnh","soBanThang","tongSoBanChoi","BaiTapGameXucXacReducer","mangXucXacNgauNhien","i","soNgauNhien","Math","floor","random","xucXacNgauNhien","tongSoDiem","tongDiem","xucXac","mangDatCuoc","datCuoc","ketQua","soBanChoi","computer","BaiTapOanTuXiReducer","mangCuocUpdate","item","maCuoc","quanCuocNgauNhien","player","find","danhSachGheDangDatUpdate","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0dd1953b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { huyGheAction } from '../../redux/actions/BaiTapDatVeActions';\nclass ThongTinDatGhe extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"mt-5\">\n                    <button className=\"gheDuocChon\"> </button> <span className=\"text-light\" style={{ fontSize: '30px' }}>ghế đã đặt</span>\n                    <br />\n                    <button className=\"gheDangChon\"> </button> <span className=\"text-light\" style={{ fontSize: '30px' }}>ghế đang đặt</span>\n                    <br />\n                    <button className=\"ghe\" style={{ marginLeft: 0 }}> </button> <span className=\"text-light\" style={{ fontSize: '30px' }}>ghế chưa đặt</span>\n                </div>\n\n                <div className=\"mt-5\">\n                    <table className=\"table\" border=\"2\">\n                        <thead>\n                            <tr className=\"text-light\" style={{ fontSize: 25 }}>\n                                <th>Số ghế</th>\n                                <th>Giá</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"text-warning\">\n                            {this.props.danhSachGheDangDat.map((gheDangDat, index) => {\n                                return <tr key={index}>\n                                    <td>{gheDangDat.soGhe}</td>\n                                    <td>{gheDangDat.gia.toLocaleString()}</td>\n                                    <td><button onClick={() => {\n                                        this.props.dispatch(huyGheAction(gheDangDat.soGhe))\n                                    }}> Hủy</button></td>\n                                </tr>\n                            })}\n                        </tbody>\n                        <tfoot>\n                            <tr className=\"text-warning\">\n                                <td></td>\n                                <td>Tổng tiền</td>\n                                <td>{this.props.danhSachGheDangDat.reduce((tongTien, gheDangDat, index) => {\n                                    return tongTien += gheDangDat.gia;\n                                }, 0).toLocaleString()}</td>\n                            </tr>\n                        </tfoot>\n                    </table>\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        danhSachGheDangDat: state.BaiTapDatVeReducer.danhSachGheDangDat\n    }\n}\n\n\nexport default connect(mapStateToProps)(ThongTinDatGhe);","import { DAT_GHE, HUY_GHE } from \"../types/BaiTapDatVeType\"\n\n\n\n\nexport const  datGheAction = (ghe) => {\n\n  return  {\n        type:DAT_GHE,\n        ghe\n    }\n}\n\nexport const huyGheAction = (soGhe) => {\n    return {\n        type:HUY_GHE,\n        soGhe\n    }\n}","export const DAT_GHE = 'DAT_GHE';\nexport const HUY_GHE = 'HUY_GHE';","import React, { Component } from 'react'\nimport {connect} from 'react-redux';\nimport { datGheAction } from '../../redux/actions/BaiTapDatVeActions';\n class HangGhe extends Component {\n\n\n    renderGhe = () => {\n        return this.props.hangGhe.danhSachGhe.map((ghe, index) => {\n            let cssGheDaDat = '';\n            let disabled = false;\n            //Trạng thái ghế đã bị người khác đặt rồi\n            if (ghe.daDat) {\n                cssGheDaDat = 'gheDuocChon';\n                disabled = true;\n            }\n\n            //Xét trạng thái ghế đang đặt\n            let cssGheDangDat = '';\n            let indexGheDangDat = this.props.danhSachGheDangDat.findIndex(gheDangDat=>gheDangDat.soGhe === ghe.soGhe );\n            if(indexGheDangDat !== -1){\n                cssGheDangDat = 'gheDangChon'\n            }\n\n            return <button onClick={() => {\n                this.props.datGhe(ghe)\n            }} disabled={disabled} className={`ghe ${cssGheDaDat} ${cssGheDangDat}`} key={index}>\n                {ghe.soGhe}\n            </button>\n\n        })\n    }\n\n    renderSoHang = () => {\n        return this.props.hangGhe.danhSachGhe.map((hang, index) => {\n            return <button className=\"rowNumber\">\n                {hang.soGhe}\n            </button>\n        })\n    }\n\n    renderHangGhe = () => {\n        if (this.props.soHangGhe === 0) {\n            return <div className=\"ml-4\">\n                {this.props.hangGhe.hang} {this.renderSoHang()}\n            </div>\n        } else {\n            return <div>\n                {this.props.hangGhe.hang} {this.renderGhe()}\n            </div>\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"text-light text-left ml-5 mt-1\" style={{ fontSize: 30 }}>\n                {this.renderHangGhe()}\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        danhSachGheDangDat: state.BaiTapDatVeReducer.danhSachGheDangDat\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        datGhe: (ghe) => {\n            dispatch(datGheAction(ghe))\n        }\n    }\n}\n\nexport default connect (mapStateToProps,mapDispatchToProps)(HangGhe);\n","import React, { Component, Fragment } from 'react';\nimport './BaiTapBookingTicket.css';\nimport ThongTinDatGhe from './ThongTinDatGhe';\nimport danhSachGheData from '../../Data/danhSachGhe.json'\nimport HangGhe from './HangGhe';\nexport default class BaiTapBookingTicket extends Component {\n\n\n    renderHangGhe = () => {\n        return danhSachGheData.map((hangGhe, index) => {\n            return <div key={index}>\n                <HangGhe hangGhe={hangGhe} soHangGhe={index} />\n            </div>\n        })\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"bookingMovie\" style={{ position: \"fixed\", width: '100%', height: '100%', backgroundImage: \"url('./img/bookingTicket/bgmovie.jpg')\", backgroundSize: '100%' }}>\n                <div style={{ position: 'fixed', width: '100%', height: '100%', backgroundColor: 'rgba(0,0,0,0.7)' }}>\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <div className=\"col-8 text-center\">\n                                <div className=\"display-4 text-warning\">ĐẶT VÉ XEM PHIM CYBERLEARN.VN</div>\n                                <div className=\"mt-3 text-light\" style={{ fontSize: '25px' }}>Màn hình</div>\n                                <div className=\"mt-2\" style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n                                    <div className=\"screen\"></div>\n                                    {this.renderHangGhe()}\n                                </div>\n\n                            </div>\n                            <div className=\"col-4\">\n                                <div style={{ fontSize: '35px' }} className=\"text-light mt-2\">DANH SÁCH GHẾ BẠN CHỌN</div>\n                                <ThongTinDatGhe />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\n\nimport BaiTapBookingTicket from \"./BaiTapRedux/BaiTapBookingTicket/BaiTapBookingTicket\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <BaiTapBookingTicket />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\n//setup State giỏ hàng trên store\n\nconst stateGioHang = {\n    gioHang: []\n}\n\n\n\n\nconst BaiTapGioHangReducer = (state = stateGioHang, action) => {\n    switch (action.type) {\n        case 'THEM_GIO_HANG': {\n            let index = state.gioHang.findIndex(spGH => spGH.maSP === action.spGioHang.maSP);\n            if (index !== -1) {\n                state.gioHang[index].soLuong += 1;\n            } else {\n                state.gioHang.push(action.spGioHang)\n            }\n            //Cập nhật lại state.gioHang\n            state.gioHang = [...state.gioHang];\n            // console.log('gioHang',state.gioHang)\n            return { ...state };\n        }; break;\n        case 'XOA_GIO_HANG': {\n            let gioHangCapNhat = [...state.gioHang];\n            //Tìm ra phần tử cần xóa dựa vào maSP\n            let index = gioHangCapNhat.findIndex(spGH => spGH.maSP === action.maSP);\n            if (index !== -1) {\n                gioHangCapNhat.splice(index, 1);\n            }\n            //Cập nhật lại state giỏ hàng mới để component render lại\n            state.gioHang = gioHangCapNhat;\n            return { ...state }\n        }; break;\n        case 'TANG_GIAM_SO_LUONG': {\n            let gioHangCapNhat = [...state.gioHang];\n            //Xử lý tăng giảm trên giỏ hàng cập nhật\n            let index = gioHangCapNhat.findIndex(spGH => spGH.maSP === action.maSP)\n            if (index !== -1) {\n                if (action.tangGiam) {\n                    gioHangCapNhat[index].soLuong += 1;\n                } else {\n                    if (gioHangCapNhat[index].soLuong > 1) {\n                        gioHangCapNhat[index].soLuong -= 1;\n                    }else \n                    {\n                        alert('Số lượng tối thiểu là 1!')\n                    }\n                }\n            }\n            //Lấy giá trị giỏ hàng cập nhật gán vào state.gioHang\n            state.gioHang = gioHangCapNhat;\n            return {...state}\n        }; break;\n        default: return { ...state };\n    }\n}\n\nexport default BaiTapGioHangReducer;","\n\nconst stateDefault = {\n    taiXiu: true, //True: là tài (từ 3->11), false là xỉu (12<)\n    mangXucXac: [\n        { ma: 6, hinhAnh: './img/gameXucXac/6.png' },\n        { ma: 6, hinhAnh: './img/gameXucXac/6.png' },\n        { ma: 6, hinhAnh: './img/gameXucXac/6.png' }\n    ],\n    soBanThang: 0,\n    tongSoBanChoi: 0\n}\n\n\n\nconst BaiTapGameXucXacReducer = (state = stateDefault, action) => {\n    switch (action.type) {\n        case 'DAT_CUOC':\n            state.taiXiu = action.taiXiu;\n            return { ...state }\n\n        case 'PLAY_GAME': {\n            //Bước 1 xử lý random xúc xắc\n            let mangXucXacNgauNhien = [];\n            for (let i = 0; i < 3; i++) {\n                //Mỗi lần lặp random ra số ngẫu nhiên từ 1 -> 6\n                let soNgauNhien = Math.floor(Math.random() * 6) + 1;\n                //Tạo ra 1 đối tượng xúc xắc từ số ngẫu nhiên\n                let xucXacNgauNhien = { ma: soNgauNhien, hinhAnh: `./img/gameXucXac/${soNgauNhien}.png` };\n                //Push vào mảng xúc xắc ngẫu nhiên\n                mangXucXacNgauNhien.push(xucXacNgauNhien);\n            }\n            //Gán state mangXucXac = mangXucXacNgauNhien\n            state.mangXucXac = mangXucXacNgauNhien;\n            //Xử lý tăng bàn chơi\n            state.tongSoBanChoi += 1;\n            //Xử lý số bàn thắng\n            let tongSoDiem = mangXucXacNgauNhien.reduce((tongDiem, xucXac, index) => {\n                return tongDiem += xucXac.ma;\n            }, 0);\n            //Xét điều kiện để người dùng thắng game\n            if ((tongSoDiem > 11 && state.taiXiu === true) || (tongSoDiem<=11 && state.taiXiu === false)) {\n                state.soBanThang += 1;\n            }\n\n            return { ...state };\n        }\n        default: return { ...state }\n    }\n}\n\nexport default BaiTapGameXucXacReducer;","\n\nconst stateDefault = {\n    mangDatCuoc: [\n        { ma: 'keo', hinhAnh: './img/gameOanTuXi/keo.png', datCuoc: false },\n        { ma: 'bua', hinhAnh: './img/gameOanTuXi/bua.png', datCuoc: false },\n        { ma: 'bao', hinhAnh: './img/gameOanTuXi/bao.png', datCuoc: true },\n    ],\n    ketQua: \"I'm iron man, i love you 3000 !!!\",\n    soBanThang: 0,\n    soBanChoi: 0,\n    computer: { ma: 'bao', hinhAnh: './img/gameOanTuXi/bao.png' },\n}\n\n\nconst BaiTapOanTuXiReducer = (state = stateDefault, action) => {\n\n    switch (action.type) {\n\n        case 'CHON_KEO_BUA_BAO': {\n            //Reset mảng cược\n            let mangCuocUpdate = [...state.mangDatCuoc];\n            //Tạo ra mảng cược mới từ mảng cược cũ và action.maCuoc do người dùng truyền lên\n            mangCuocUpdate = mangCuocUpdate.map((item, index) => {\n                if (item.ma === action.maCuoc) {\n                    return { ...item, datCuoc: true }\n                }\n                return { ...item, datCuoc: false }\n            })\n            //setState của mangCuoc => render lại giao diện\n            state.mangDatCuoc = mangCuocUpdate;\n            return { ...state }\n        }\n        case 'RAN_DOM': {\n            let soNgauNhien = Math.floor(Math.random() * 3);\n            let quanCuocNgauNhien = state.mangDatCuoc[soNgauNhien];\n            state.computer = { ...quanCuocNgauNhien };\n            return { ...state }\n        }\n        case 'END_GAME':\n         \n            let player = state.mangDatCuoc.find(item => item.datCuoc === true);\n            let computer = state.computer;\n            switch (player.ma) {\n                case 'keo':\n                    if (computer.ma === 'keo') {\n                        state.ketQua = 'hòa nhau !!!';\n                    } else if (computer.ma === 'bua') {\n                        state.ketQua = 'thua sml !!!';\n                    } else {\n                        state.soBanThang += 1;\n                        state.ketQua = \"I'm iron man, i love you 3000 !!!\";\n                    }\n                    ; break;\n                case 'bua':\n                    if (computer.ma === 'keo') {\n                        state.soBanThang += 1;\n                        state.ketQua = \"I'm iron man, i love you 3000 !!!\";\n                    } else if (computer.ma === 'bua') {\n                        state.ketQua = 'hòa nhau !!!';\n                    } else {\n                        state.ketQua = 'thua sml !!!';\n                    } break;\n                case 'bao':\n                    if (computer.ma === 'keo') {\n                        state.ketQua = 'thua sml !!!';\n                    } else if (computer.ma === 'bua') {\n                        state.soBanThang += 1;\n                        state.ketQua = \"I'm iron man, i love you 3000 !!!\";\n                    } else {\n                        state.ketQua = 'hòa nhau !!!';\n                    } break;\n                default: \n                state.soBanThang += 1;\n                state.ketQua = \"I'm iron man, i love you 3000 !!!\";\n            }\n            state.soBanChoi += 1;\n            return { ...state }\n        default: return { ...state }\n    }\n}\n\nexport default BaiTapOanTuXiReducer;","import { DAT_GHE, HUY_GHE } from \"../types/BaiTapDatVeType\";\n\n\nconst stateDefault = {\n    danhSachGheDangDat: [\n\n\n    ]\n}\n\n\n\nconst BaiTapDatVeReducer = (state = stateDefault, action) => {\n\n    switch (action.type) {\n        case DAT_GHE: {\n            let danhSachGheDangDatUpdate = [...state.danhSachGheDangDat];\n            let index = danhSachGheDangDatUpdate.findIndex(gheDangDat => gheDangDat.soGhe === action.ghe.soGhe);\n            if (index !== -1) { //khi người dùng click Ghế đang đặt đã có trong mảng => remove đi\n                //\n                danhSachGheDangDatUpdate.splice(index, 1);\n            }else {  //khi người dùng click Ghế đang đặt chưa có trong mảng => push vào mảng\n                danhSachGheDangDatUpdate.push(action.ghe)\n            }\n            //Cập nhật lại state => giao diện render lại\n            state.danhSachGheDangDat = danhSachGheDangDatUpdate;\n            return { ...state }\n        }\n        case HUY_GHE : {\n            let danhSachGheDangDatUpdate = [...state.danhSachGheDangDat];\n            let index = danhSachGheDangDatUpdate.findIndex(gheDangDat => gheDangDat.soGhe === action.soGhe);\n            if (index !== -1) { //khi người dùng click Ghế đang đặt đã có trong mảng => remove đi\n                //\n                danhSachGheDangDatUpdate.splice(index, 1);\n            }\n            state.danhSachGheDangDat = danhSachGheDangDatUpdate;\n            return {...state};\n        }\n        default: return { ...state }\n    }\n}\n\n\nexport default BaiTapDatVeReducer;","import {combineReducers} from 'redux';\n\nimport BaiTapGioHangReducer from './BaiTapGioHangReducer'\nimport BaiTapGameXucXacReducer from './BaiTapXucXacReducer';\nimport BaiTapOanTuXiReducer from  './BaiTapOanTuXiReducer'\nimport BaiTapDatVeReducer from './BaiTapDatVeReducer';\nconst rootReducer = combineReducers({ //store tổng của ứng dụng\n    stateGioHang: BaiTapGioHangReducer, //state giỏ hàng\n    BaiTapGameXucXacReducer, //state BaiTapGame\n    BaiTapOanTuXiReducer, //state bài tập oan tu xì\n    BaiTapDatVeReducer//state bài tập đặt vé\n})\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//setup redux\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './redux/reducer/rootReducer';\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}